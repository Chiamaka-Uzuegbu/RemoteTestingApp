// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RemoteTestingApp.Infrastructure.DataAccess;

namespace RemoteTestingApp.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RemoteTestingApp.Core.Entities.CompanyDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanyPolicy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DocumentUnquieID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TermsAndConditions")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CompanyDocuments");
                });

            modelBuilder.Entity("RemoteTestingApp.Core.Entities.PersonalDetails", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GaurantorFirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GaurantorLastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GaurantorPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HouseAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NextOfKinAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NextOfKinFirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NextOfKinLastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NextOfKinPhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RelationShipStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RelationshipWithNextOfKin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Religion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserDetailsUniqueIdentifier")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("UserPersonalDetails");
                });

            modelBuilder.Entity("RemoteTestingApp.Core.Entities.Register", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserUniqueIdentifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("passwordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("passwordSalt")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("id");

                    b.ToTable("Registers");
                });

            modelBuilder.Entity("RemoteTestingApp.Core.Entities.ReviewCompanyDocument", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Accepted")
                        .HasColumnType("bit");

                    b.Property<Guid>("DocumentUnquieID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ReviewerUniqueIdentifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("SignDate")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.ToTable("ReviewCompanyDocuments");
                });

            modelBuilder.Entity("RemoteTestingApp.Core.Entities.UploadedDocument", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("CandidateUniqueIdentifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("NyscCertificate")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("ProfessionalCertificate")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("PublicId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("UniversityCertificate")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("WaecCertificate")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("id");

                    b.ToTable("UploadedDocuments");
                });
#pragma warning restore 612, 618
        }
    }
}
